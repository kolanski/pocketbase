{
  "name": "update-order-status",
  "code": "// Update Order Status API\nif ($request.method !== 'PATCH') {\n    return {\n        body: { error: 'Method not allowed. Use PATCH.' },\n        headers: { 'Content-Type': 'application/json' },\n        status: 405\n    };\n}\n\ntry {\n    const urlParts = $request.url.split('/');\n    const orderId = urlParts[urlParts.length - 1];\n    \n    if (!orderId) {\n        return {\n            body: { error: 'Order ID is required in URL' },\n            headers: { 'Content-Type': 'application/json' },\n            status: 400\n        };\n    }\n    \n    const data = JSON.parse($request.body || '{}');\n    const { status, notes } = data;\n    \n    if (!status) {\n        return {\n            body: { error: 'Status is required' },\n            headers: { 'Content-Type': 'application/json' },\n            status: 400\n        };\n    }\n    \n    const validStatuses = ['pending', 'processing', 'shipped', 'delivered', 'cancelled'];\n    if (!validStatuses.includes(status)) {\n        return {\n            body: { error: 'Invalid status. Must be one of: ' + validStatuses.join(', ') },\n            headers: { 'Content-Type': 'application/json' },\n            status: 400\n        };\n    }\n    \n    // Find and update the order\n    const order = $app.findRecordById('orders', orderId);\n    if (!order) {\n        return {\n            body: { error: 'Order not found' },\n            headers: { 'Content-Type': 'application/json' },\n            status: 404\n        };\n    }\n    \n    const updateData = { id: orderId, status: status };\n    if (notes) {\n        updateData.notes = notes;\n    }\n    \n    const updatedOrder = $app.save('orders', updateData);\n    \n    return {\n        body: {\n            success: true,\n            order_id: updatedOrder.id,\n            old_status: order.status,\n            new_status: updatedOrder.status,\n            updated_at: updatedOrder.updated\n        },\n        headers: { 'Content-Type': 'application/json' },\n        status: 200\n    };\n    \n} catch (error) {\n    return {\n        body: { error: error.message || 'Internal server error' },\n        headers: { 'Content-Type': 'application/json' },\n        status: 500\n    };\n}",
  "enabled": true,
  "timeout": 5000,
  "triggers": {
    "type": "http", 
    "method": "PATCH", 
    "path": "/api/orders/*"
  },
  "contentType": "application/json",
  "description": "API endpoint to update order status"
}
